AWSTemplateFormatVersion: 2010-09-09
Description: "for production/test and public/private"
Parameters:
  Instancetype:
    Type : String 
    Description: "dess"
    Default: t2.micro
  Mykey:
    Description: "MY KEY"
    Type: AWS::EC2::KeyPair::KeyName
    Default: "yasser"
  Env:
    Description: "Deployment Environment"
    Type : String 
    Default: "Test"
    AllowedValues:
      - Test
      - Prod
  NetMode:
    Description: "public or private"
    Type: String
    Default: "Public"
    AllowedValues:
      - Public
      - Private
  AMID:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  Message:
    Description: "Message for HTML page"
    Default: "Test1"
    Type: "String"
Conditions:
  IsProduction: !Equals 
    - !Ref Env
    - Prod
  IsTest : !Equals 
    - !Ref Env
    - Test
  IsPublic: !Equals
    - !Ref NetMode
    - Public
  IsPrivate: !Equals
    - !Ref NetMode
    - Private
Resources:

  PublicInstance:
    Type: AWS::EC2::Instance
    Condition: IsPublic
    Metadata:
      'AWS::CloudFormation::Init':
        configSets: 
          default: 
            - "seting-cfhup"
            - "setting-website"
        seting-cfhup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackName}
                region=${AWS::Region}
                interval=1
                verbose=true
              mode: '000400'
              owner: 'root'
              group: 'root'
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.PublicInstance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource PublicInstance --region ${AWS::Region}
                runas=root
              mode: '000400'
              owner: 'root'
              group: 'root'
          commands:
            requiredonly:
              command: "/bin/echo -n "
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf               
        setting-website: 
          packages:
            yum:
              httpd: []
              tmux: [] 
          sources:
            /var/www/html:   https://github.com/yasser-alhawary/cloudformation/tarball/v1.0
          files:
            /var/www/html/index.html:
              content: !Sub |
                <html><head><title>Amazing test page</title></head><body><h1><center>${Message}"asdasd"</center></h1></body></html> 
          commands:
            setperm:
              command: "chown -R apache:apache /var/www/html"          
          services:                      
            systemd:                 
              httpd:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/var/www/html/index.html"
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT5M    
    Properties:
      InstanceType: !Ref Instancetype
      ImageId: !Ref AMID
      KeyName: !Ref Mykey
      SecurityGroupIds:
        - !ImportValue  SSH
        - !ImportValue  HTTPFromALB
      SubnetId: !ImportValue  PubSub1	     
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource PublicInstance --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource PublicInstance

  PublicInstance2:
    Type: AWS::EC2::Instance
    Condition: IsPublic
    Metadata:
      'AWS::CloudFormation::Init':
        configSets: 
          default: 
            - "seting-cfhup"
            - "setting-website"
        seting-cfhup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackName}
                region=${AWS::Region}
                interval=1
                verbose=true
              mode: '000400'
              owner: 'root'
              group: 'root'
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.PublicInstance2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource PublicInstance2 --region ${AWS::Region}
                runas=root
              mode: '000400'
              owner: 'root'
              group: 'root'
          commands:
            requiredonly:
              command: "/bin/echo -n "
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf               
        setting-website: 
          packages:
            yum:
              httpd: []
              tmux: [] 
          sources:
            /var/www/html:   https://github.com/yasser-alhawary/cloudformation/tarball/v1.0
          files:
            /var/www/html/index.html:
              content: !Sub |
                <html><head><title>Amazing test page</title></head><body><h1><center>${Message}"asdasd"</center></h1></body></html> 
          commands:
            setperm:
              command: "chown -R apache:apache /var/www/html"          
          services:                      
            systemd:                 
              httpd:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/var/www/html/index.html"
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT5M    
    Properties:
      InstanceType: !Ref Instancetype
      ImageId: !Ref AMID
      KeyName: !Ref Mykey
      SecurityGroupIds:
        - !ImportValue  SSH
        - !ImportValue  HTTPFromALB
      SubnetId: !ImportValue  PubSub2	     
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource PublicInstance2 --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource PublicInstance2
####
#v1 is classic elb v2 is alb/nlb/gl
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
        Subnets: 
            - !ImportValue  PubSub1
            - !ImportValue  PubSub2
            - !ImportValue  PubSub3
        SecurityGroups: 
            - !ImportValue ALBHTTP
        Type: application
        Scheme: internet-facing
        IpAddressType: ipv4
  
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
        LoadBalancerArn: !Ref LoadBalancer
        Port: 80
        Protocol: HTTP 
        DefaultActions: 
            - Type: forward
              TargetGroupArn: !Ref TargetGroup
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
        VpcId: !ImportValue VPCID
        Port: 80
        Protocol: HTTP
        TargetType: instance
        Targets:
          - Id : !Ref PublicInstance
            Port: 80
          - Id:  !Ref PublicInstance2
            Port: 80
        Matcher: 
            HttpCode: 200
        HealthCheckIntervalSeconds: 10
        HealthCheckPath: "/"
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 5
        HealthyThresholdCount: 2
        UnhealthyThresholdCount: 2       